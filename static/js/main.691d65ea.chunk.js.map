{"version":3,"sources":["Calender.js","App.js","serviceWorker.js","index.js"],"names":["Calender","props","def_start_date","start_date","def_end_date","get_def_end_date","parseInt","dur_years","state","generate_state","unit","console","log","update_start_date","bind","update_end_date","update_duration_unit","visualize","sdate","toISOString","includes","split","edate","Date","getFullYear","getMonth","getDate","e","this","target","value","forceUpdate","display","blocks","table","undefined","createBlocks","createTable","x","y","overflow","completed","className","title","id","type","onChange","defaultValue","class","onClick","total","parse","end_date","today","now","total_time","getTime","time_elapsed","unit_duration","total_blocks","Math","round","closest_rect","block_width","block_height","completed_blocks","num","root","ceil","sqrt","min_error","abs","min_dimen","k","error","push","rows","marked","i","cells","j","last_row","length","React","Component","App","dob","get_start_dates","start_of_decade","start_of_year","current_year","Boolean","window","location","hostname","match","createElement","dom","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.691d65ea.chunk.js","sourcesContent":["import React from 'react';\nimport './Calender.css'\nimport './styles.css'\n// 'use strict' is a directive introduced in ECMA5\n// It enforces certain rules to the way variables are handled in js\n// 1. In normal JavaScript, mistyping a variable name creates a new global variable. In strict mode, this will throw an error, making it impossible to accidentally create a global variable.\n//  x=3.14 // throws error\n// 2. In strict mode, any assignment to a non-writable property, a getter-only property, a non-existing property, a non-existing variable, or a non-existing object, will throw an error.\n//  \"use strict\";\n//  var obj = {};\n//  Object.defineProperty(obj, \"x\", {value:0, writable:false});\n//  obj.x = 3.14;      // This will cause an error\n\nconst millis_in_a_day = 24 * 60 * 60 * 1000\n\nclass Calender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // set default values\n    const def_start_date = this.props.start_date\n    const def_end_date = this.get_def_end_date(def_start_date, parseInt(this.props.dur_years));\n\n    // set state\n    this.state = this.generate_state(this.props.unit, def_start_date, def_end_date);\n\n    console.log(this.state)\n\n    // register event handlers\n    this.update_start_date = this.update_start_date.bind(this)\n    this.update_end_date = this.update_end_date.bind(this)\n    this.update_duration_unit = this.update_duration_unit.bind(this)\n    this.visualize = this.visualize.bind(this)\n  }\n\n  generate_state(unit, def_start_date, def_end_date) {\n    var state = {\n      'unit': 'weeks',\n      'display': true\n    };\n\n    if (unit) {\n      state.unit = unit;\n    }\n\n    state.sdate = def_start_date.toISOString();\n    if (state.sdate.includes('T')) {\n      state.sdate = state.sdate.split('T')[0];\n      console.log(state.sdate);\n    }\n\n    state.edate = def_end_date.toISOString();\n    if (state.edate.includes('T')) {\n      state.edate = state.edate.split('T')[0];\n    }\n\n    return state;\n  }\n\n  get_def_end_date(start_date, dur_years) {\n    var end_date = new Date(start_date.getFullYear() + dur_years, \n      start_date.getMonth(), \n      start_date.getDate());\n    return end_date;\n  }\n\n  update_start_date(e) {\n    this.state.sdate = e.target.value\n    this.forceUpdate()\n  }\n\n  update_end_date(e) {\n    this.state.edate = e.target.value\n    this.forceUpdate()\n  }\n\n  update_duration_unit(e) {\n    this.state.unit = e.target.value\n    this.forceUpdate()\n  }\n\n  visualize(e) {\n    this.state.display = true\n    this.forceUpdate()\n  }\n\n  render() {\n    console.log('this.state');\n    console.log(this.state);\n    \n    var table = undefined;\n    var blocks;\n    if (this.state.display === true) {\n      // validate input\n\n      // if (blocks.error) {\n      //   window.pop(blocks.error)\n      // }  \n      blocks = this.createBlocks(this.state.unit, this.state.sdate, this.state.edate);\n      table = this.createTable(blocks.x, blocks.y, blocks.overflow, blocks.completed);\n    }\n    \n    const dom = \n      <div className='calender'>\n        <div className='cal-title'>\n          {this.props.title}\n        </div>\n        <div id=\"form\">\n          <div className=\"date-field\">\n            Start date: <input type=\"date\" id=\"sdate\"\n            value={this.state.sdate} onChange={this.update_start_date}/>\n          </div>\n          <div className='date-field'>\n            End date: <input type=\"date\" id=\"edate\" value={this.state.edate}\n            onChange={this.update_end_date}/>\n          </div>\n          <div className='duration-field'>\n            <select id = 'unit' onChange = {this.update_duration_unit} defaultValue={this.state.unit}>\n              <option value=\"weeks\">weeks</option>\n              <option value=\"months\">months</option>\n              <option value=\"years\">years</option>\n              <option value=\"decades\">decades</option>\n            </select>\n          </div>\n          <div class='tl-button'>\n            <button id='visualize' onClick={this.visualize}>Visualize</button>\n          </div>\n        </div>\n        <div id='calender'>\n          <table className='cal-table'><tbody>{table}</tbody></table>\n        </div>\n        <div className='stats'>\n          <table className='stats-table'> \n            <tbody>\n              <tr>\n                <td className='stats-table-cell'><i>completed</i></td> <td className='stats-table-cell'><i>{blocks.completed}/{blocks.total}</i></td>\n              </tr>\n              <tr>\n                <td className='stats-table-cell'><i>time-left</i></td> <td className='stats-table-cell'><i><b>{blocks.total - blocks.completed}/{blocks.total}</b></i></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n    return dom\n  }\n  \n  createBlocks(unit, sdate, edate) {\n    console.log(unit)\n    var start_date = new Date(Date.parse(sdate))\n    var end_date = new Date(Date.parse(edate))\n    var today = Date.now()\n\n    const total_time = end_date.getTime() - start_date.getTime()\n    var time_elapsed = today - start_date.getTime()\n\n    var unit_duration = 7 * millis_in_a_day\n    if (\"months\" === unit) {\n      unit_duration = 30 * millis_in_a_day\n    } else if (\"years\" === unit) {\n      unit_duration = 365 * millis_in_a_day\n    } else if (\"decades\" === unit) {\n      unit_duration = 10 * 365 * millis_in_a_day\n    }\n\n    var total_blocks = Math.round(total_time / unit_duration)\n    const [block_width, block_height, overflow] = this.closest_rect(total_blocks)\n    var completed_blocks = Math.round(time_elapsed / unit_duration)\n\n    var blocks = {};\n    blocks.x = block_width;\n    blocks.y = block_height;\n    blocks.overflow = overflow;\n    blocks.completed = completed_blocks;\n    blocks.total = total_blocks;\n    return blocks;\n  }\n\n  closest_rect(num) {\n    const root = Math.ceil(Math.sqrt(num))\n    var min_error = Math.abs(num - root * root)\n    var min_dimen = [root, root]\n    var k = 0;\n    while (k < root) {\n      var error = Math.abs(num - (root - k) * (root + k))\n      if (error < min_error) {\n        min_error = error\n        min_dimen = [root - k, root + k]\n      }\n      k += 1\n    }\n    min_dimen.push(min_error);\n    return min_dimen\n  }\n  \n  createTable(x, y, overflow, completed) {\n    let rows = []\n    let marked = 0;\n    for (var i = 0; i < x; i++) {\n      let cells = []\n      for (var j = 0; j < y; j++) {\n        if (marked++ < completed) {\n          cells.push(<td>x</td>);\n        } else {\n          cells.push(<td></td>);\n        }\n      }\n      rows.push(<tr>{cells}</tr>)\n    }\n    var last_row = []\n    for (var i = 0; i < overflow; i++) {\n      if (marked++ < completed) {\n        last_row.push(<td>x</td>);\n      } else {\n        last_row.push(<td></td>);\n      }\n    }\n    if (last_row.length > 0) {\n      rows.push(<tr>{last_row}</tr>)\n    }\n    return rows;\n  }\n}\n\nexport default Calender","import React from 'react';\nimport './styles.css'\nimport Calender from './Calender'\n\nclass App extends React.Component {\n  render() {\n    var dob = new Date(1995, 6, 26)\n    var dur_years=\"80\"\n\n    const [start_of_decade, start_of_year] = this.get_start_dates();\n\n    return (\n      <jsx>\n        <div id=\"title\">\n          Visualize and internalize the passing time.\n        </div>\n        <Calender start_date={dob} dur_years={dur_years} unit='years' title='Full lifetime' />\n        <Calender start_date={start_of_decade} dur_years='10' unit='months' title='This decade' />\n        <Calender start_date={start_of_year} dur_years='1' unit='weeks' title='This year' />\n      </jsx>\n    );\n  }\n\n  get_start_dates() {\n    const current_year = new Date().getFullYear();\n    const decade_start_year = current_year - current_year % 10\n\n    const decade_start = new Date(decade_start_year, 0, 2);\n    const year_start = new Date(current_year, 0, 2);\n\n    return [decade_start, year_start]\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App'\nimport Calender from './Calender'\nimport * as serviceWorker from './serviceWorker';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nconst e = React.createElement;\n\nconst dom = document.getElementById('app');\nReactDOM.render(e(App), dom);\nserviceWorker.unregister();"],"sourceRoot":""}